{"version":3,"sources":["components/Jobs.js","components/Job.js","App.js","index.js"],"names":["Jobs","compensation","response","className","data","currency","Intl","NumberFormat","style","substr","minimumFractionDigits","format","minAmount","maxAmount","periodicity","skills","map","skill","name","this","props","jobs","length","job","key","id","objective","Compensation","organizations","organization","src","picture","width","alt","type","Skills","to","Component","Job","state","attachments","details","created","strengths","url","match","params","fetch","result","json","setState","strength","att","address","detail","code","content","Strengths","App","searchJobs","requestOptions","method","headers","body","JSON","stringify","keyword","then","results","handleChange","bind","handleSubmit","event","target","value","preventDefault","exact","path","render","onChange","onClick","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40030f12.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link} from 'react-router-dom';\r\n\r\nexport default class Jobs extends Component {\r\n\r\n    Compensation(compensation){\r\n        let response = <span className=\"badge badge-info\">A Convenir</span>;\r\n        if(compensation){\r\n            if(compensation.data){\r\n                return <div>\r\n                    <span className=\"badge badge-info\">\r\n                        {compensation.data.currency}\r\n                    </span>\r\n                    <span className=\"badge badge-primary\">\r\n                        Desde: {new Intl.NumberFormat(\r\n                                    'us-US',\r\n                                    {\r\n                                        style: 'currency', \r\n                                        currency: compensation.data.currency.substr(0, 3),\r\n                                        minimumFractionDigits: 0\r\n                                    }\r\n                                    ).format(compensation.data.minAmount)}\r\n                    </span>\r\n                    <span className=\"badge badge-success\">\r\n                        Hasta: {new Intl.NumberFormat(\r\n                                    'us-US',\r\n                                    {\r\n                                        style: 'currency', \r\n                                        currency: compensation.data.currency.substr(0, 3),\r\n                                        minimumFractionDigits: 0\r\n                                    }\r\n                                    ).format(compensation.data.maxAmount)}\r\n                    </span>\r\n                    <span className=\"badge badge-dark\">\r\n                        {compensation.data.periodicity}\r\n                    </span>\r\n                </div>\r\n            }else{\r\n                return response;\r\n            }\r\n        }else{\r\n            return response;\r\n        } \r\n    }\r\n\r\n    Skills(skills){\r\n        return <div>\r\n                <span>Habilidades: </span>\r\n                {skills.map(\r\n                    skill =>{\r\n                        return <span className=\"badge badge-info\">\r\n                                {skill.name}\r\n                        </span>\r\n                    }\r\n                )}\r\n        </div>\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='row'>\r\n                {this.props.jobs.length ?\r\n                <h3 className='col-sm-12'>Resultados</h3>\r\n                : \"\"}\r\n                {\r\n                    this.props.jobs.map(\r\n                        job => {\r\n                            return <div className='col-sm-6'>\r\n                                <div className=\"card\" key={job.id}>\r\n                                        <h5 className=\"card-header\">{job.objective}\r\n                                            <label className='float-right text-success'>\r\n                                                {this.Compensation(job.compensation)}\r\n                                            </label>\r\n                                        </h5>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"card-text\">\r\n                                                {job.organizations.map(\r\n                                                    organization =>{\r\n                                                        return <div>\r\n                                                            <img src={organization.picture} className=\"rounded-circle\" width=\"10%\" alt={organization.name} ></img>\r\n                                                            <p>{organization.name}</p>\r\n                                                        </div>\r\n                                                    }\r\n                                                )}\r\n                                                Tipo: {job.type}\r\n                                                {this.Skills(job.skills)}\r\n                                                <Link to={\"/fronttorre/job/\"+job.id} className=\"btn btn-primary float-right\">Postularse</Link>\r\n                                            </div>\r\n                                            \r\n                                            \r\n                                            \r\n                                        </div>\r\n                                </div>\r\n                                <br></br>\r\n                            </div>\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Link} from 'react-router-dom';\r\n\r\nexport default class Job extends Component {\r\n    state = {\r\n        job: {\r\n            attachments: [],\r\n            details: [],\r\n            created:'',\r\n            strengths:[]\r\n        },\r\n    }\r\n    async componentDidMount(){\r\n        const url = 'https://torre.co/api/opportunities/'+this.props.match.params.id\r\n        const result = await fetch(url)\r\n        const data = await result.json()\r\n        this.setState({job: data})\r\n\r\n    }\r\n\r\n    Strengths(strengths){\r\n        return <div>\r\n                <span>Fortalezas: </span>\r\n                {strengths.map(\r\n                    strength =>{\r\n                        return <span className=\"badge badge-info\">\r\n                                {strength.name}\r\n                        </span>\r\n                    }\r\n                )}\r\n        </div>\r\n    }\r\n\r\n    Compensation(compensation){\r\n        let response = <span className=\"badge badge-info\">A Convenir</span>;\r\n        if(compensation){\r\n                return <div>\r\n                    <span className=\"badge badge-info\">\r\n                        {compensation.currency}\r\n                    </span>\r\n                    <span className=\"badge badge-primary\">\r\n                        Desde: {new Intl.NumberFormat(\r\n                                    'us-US',\r\n                                    {\r\n                                        style: 'currency', \r\n                                        currency: compensation.currency.substr(0, 3),\r\n                                        minimumFractionDigits: 0\r\n                                    }\r\n                                    ).format(compensation.minAmount)}\r\n                    </span>\r\n                    <span className=\"badge badge-success\">\r\n                        Hasta: {new Intl.NumberFormat(\r\n                                    'us-US',\r\n                                    {\r\n                                        style: 'currency', \r\n                                        currency: compensation.currency.substr(0, 3),\r\n                                        minimumFractionDigits: 0\r\n                                    }\r\n                                    ).format(compensation.maxAmount)}\r\n                    </span>\r\n                    <span className=\"badge badge-dark\">\r\n                        {compensation.periodicity}\r\n                    </span>\r\n                </div>\r\n        }else{\r\n            return response;\r\n        } \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className='text-center'>\r\n                    <img\r\n                        src={this.state.job.attachments.map(\r\n                            att => att.address\r\n                        )}\r\n                        className=\"img-fluid img-responsive\"\r\n                    >\r\n                    </img>\r\n                </div>\r\n                    <div className=\"card\" key={this.state.job.id}>\r\n                        <h5 className=\"card-header\">{this.state.job.objective}\r\n                            <div className=\"float-right\"> {this.Compensation(this.state.job.compensation)} </div>\r\n                        </h5>\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">\r\n                                <p>\r\n                                <strong>Sobre Nosotros</strong>\r\n                                 {this.state.job.details.map(\r\n                                        detail =>\r\n                                        {\r\n                                            if(detail.code=='organizations'){\r\n                                                return <li>{detail.content}</li>\r\n                                            }\r\n                                        }                                             \r\n                                     )\r\n                                 }\r\n                                </p>\r\n                                <p>\r\n                                <strong>Detalle Oferta</strong>\r\n                                 {this.state.job.details.map(\r\n                                        detail =>\r\n                                        {\r\n                                            if(detail.code=='reason'){\r\n                                                return <li>{detail.content}</li>\r\n                                            }\r\n                                        }                                             \r\n                                     )\r\n                                 }\r\n                                </p>\r\n                                <p>\r\n\r\n                                <p>\r\n                                <strong>Responsabilidades</strong>\r\n                                 {this.state.job.details.map(\r\n                                        detail =>\r\n                                        {\r\n                                            if(detail.code=='responsibilities'){\r\n                                                return <li>{detail.content}</li>\r\n                                            }\r\n                                        }                                             \r\n                                     )\r\n                                 }\r\n                                </p>\r\n\r\n                                <p>\r\n                                <strong>Requirements</strong>\r\n                                 {this.state.job.details.map(\r\n                                        detail =>\r\n                                        {\r\n                                            if(detail.code=='requirements'){\r\n                                                return <li>{detail.content}</li>\r\n                                            }\r\n                                        }                                             \r\n                                     )\r\n                                 }\r\n                                </p>\r\n                                <p>\r\n                                <strong>Beneficios</strong>\r\n                                 {this.state.job.details.map(\r\n                                        detail =>\r\n                                        {\r\n                                            if(detail.code=='benefits'){\r\n                                                return <li>{detail.content}</li>\r\n                                            }\r\n                                        }                                             \r\n                                     )\r\n                                 }\r\n                                </p>\r\n                                \r\n                                <p>\r\n                                <strong>Adicional</strong>\r\n                                 {this.state.job.details.map(\r\n                                        detail =>\r\n                                        {\r\n                                            if(detail.code=='additional'){\r\n                                                return <li>{detail.content}</li>\r\n                                            }\r\n                                        }                                             \r\n                                     )\r\n                                 }\r\n                                </p>\r\n                                \r\n                            </p>\r\n                            {this.Strengths(this.state.job.strengths)}\r\n                            <label>Fecha de publicacción: {this.state.job.created.substr(0,10)}</label>    \r\n                            </p>\r\n                        </div>\r\n                        <Link to='/fronttorre/' className='btn btn-info'>Volver</Link>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router , Route} from 'react-router-dom';\nimport './App.css';\n\nimport Jobs from './components/Jobs';\nimport Job from './components/Job';\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      jobs: [],\n      keyword: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({keyword: event.target.value});\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.searchJobs();\n  }\n\n  searchJobs = () => {\n    const requestOptions  = {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(\n              {\n                  \"skill/role\":   {\n                      \"text\":this.state.keyword,\n                      \"experience\":\"potential-to-develop\"\n                  }\n              })\n      }\n      fetch('https://search.torre.co/opportunities/_search/?currency=USD%24&page=0&periodicity=hourly&lang=es&size=20&aggregate=false&offset=0',requestOptions)\n      .then(response => response.json())\n      .then(data => this.setState({jobs: data.results}))\n  }\n\n  render(){\n    return (\n      <div>\n        <Router>\n          <Route exact path='/fronttorre/' render={() => {\n            return <div className=\"container\">\n              <h2>Torre.co by Velamds\n                <img src=\"https://avatars2.githubusercontent.com/u/19848803?s=460&u=6d72ab7fa5f291b61819129c0d2f7a227bdd65eb&v=4\" className=\"rounded-circle\" alt=\"@Velamds\" width=\"3%\"></img>\n              </h2>\n              <form>\n                <div className=\"row\">\n                  <p className=\"col-sm-12\">Escribe la habilidad en la que buscas empleo</p>\n                  <div className=\"col-sm-10\">\n                    <input type=\"text\" className=\"form-control\"\n                    value={this.state.keyword}\n                    onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <button \n                      type=\"submit\"                \n                      className=\"btn btn-primary\"\n                      onClick={this.handleSubmit}\n                    >\n                      Buscar\n                    </button>\n                  </div>\n                </div>  \n              </form>\n              <Jobs jobs={this.state.jobs}/>\n            </div>\n            }}>\n          </Route>\n          <Route path='/fronttorre/job/:id' component={Job}/>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}